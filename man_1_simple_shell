SIMPLE_SHELL(1)                        User Commands                        SIMPLE_SHELL(1)

NAME
       simple_shell - A simple UNIX command-line interpreter

SYNOPSIS
       simple_shell

DESCRIPTION
       simple_shell is a basic command-line interpreter that allows users to run commands
       interactively. It implements a basic shell environment where users can execute commands
       and built-in functions. It uses `execve` to run external commands and has basic features
       such as a prompt, `exit` command to quit the shell, and `env` to display environment variables.

       simple_shell is a simple educational tool for understanding how a shell interacts with
       the operating system.

COMMANDS
       exit
           Exit the shell. The shell terminates and returns to the terminal.

       env
           Print the current environment variables. The environment variables are printed in the
           form "NAME=VALUE", one per line.

       external_commands
           Any valid command that exists in the system's PATH can be executed. The command
           is searched for in the directories listed in the PATH environment variable.
           The shell uses the `execve` system call to execute the command.

USAGE
       To use simple_shell, run the program from a terminal session:

           $ ./simple_shell

       The shell will display a prompt (e.g., `$ `) and wait for user input. After the user
       enters a command, the shell will attempt to execute it. If the command is a built-in
       command (like `exit` or `env`), it will be processed internally. Otherwise, the shell
       will attempt to locate the command in the directories listed in the PATH environment
       variable and execute it.

       If a command is not found, an error message is displayed, and the prompt reappears.

EXAMPLES
       Example 1: Running an external command
           $ ls
           bin  etc  home  lib  usr
           $

       Example 2: Using the env command to display environment variables
           $ env
           PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
           HOME=/home/user
           LANG=en_US.UTF-8
           $

       Example 3: Using the exit command to exit the shell
           $ exit
           $

ERRORS
       simple_shell will display the following error messages:

       command_name: command not found
           If the entered command cannot be found in the PATH directories, the shell will
           display this error message.

       execve failed: error_message
           If the execution of a command via `execve` fails, this error will be displayed.

ENVIRONMENT
       simple_shell uses the following environment variables:

       PATH
           The PATH variable is used to search for executable commands in directories.

       environ
           The shell uses the global `environ` variable to pass the environment to the `execve`
           system call when executing commands.

FILES
       /usr/bin/ls
           Example of a typical external command that can be run within the shell.

       /usr/local/bin
           Typical directory included in the PATH where commands are stored.

SEE ALSO
       execve(2), env(1), exit(1)

BUGS
       - The shell does not support piping, redirections, or commands with arguments.
       - Built-in functions are limited to `exit` and `env`.
       - The shell will not search for commands in directories other than those listed in PATH.

AUTHOR
       Written by Pamela Chauvin.

COPYRIGHT
       This software is released under the MIT License. See the LICENSE file for details.


